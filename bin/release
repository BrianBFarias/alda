#!/usr/bin/env bash

set -e

if [[ -z "$CIRCLECI_API_TOKEN" ]]; then
  echo "CIRCLECI_API_TOKEN must be set."
  exit 1
fi

version="$(cat "$(dirname "$0")/../VERSION")"

echo "--- Release version: $version ---"
echo

version_changelog="$("$(dirname "$0")/version-changelog" "$version")"

echo "========================================"
echo "$version_changelog"
echo "========================================"
echo
read -r -p "Is this changelog correct? [yN] "

if [[ "$REPLY" != "y" ]]; then
  echo "Aborting."
  exit 1
fi

# Pushing a tag whose name starts with "release-" causes CircleCI to do a build
# and upload the artifacts (via `bin/upload-release`).
release_tag="release-$version"
git tag -a "$release_tag" -m "$release_tag"
git push --tags

# HACK: Wait for a bit for CircleCI to create the build pipeline.
#
# `watch-circleci-pipeline` will wait until a build pipeline exists for the
# current commit, however, given that we just pushed a tag for the current
# commit, there might be multiple builds, one of which is for just the commit
# (which isn't a release build) and the other is the one that we just triggered
# by pushing a tag (the release build). As a workaround, for now we just wait 5
# seconds so that we get the most recent build.
#
# TODO: Add some kind of argument to `watch-circleci-pipeline` so that we can
# specify that we're interested in the build for $release_tag.
sleep 5

"$(dirname "$0")/watch-circleci-pipeline"
